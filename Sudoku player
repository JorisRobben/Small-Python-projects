EMPTY_SPACE = "."
GRID_LENGTH = 9
FULL_GRID_SIZE = GRID_LENGTH*GRID_LENGTH

class sudoku_grid:
  def __init__(self, originalSetup):
    # originalSetup is a string of 81 characters for the puzzle
    # setup, with numbers and periods (for the blank spaces).
    # See https://inventwithpython.com/sudokupuzzles.txt
    self.originalSetup = originalSetup
    self.grid = {}

  def reset_grid(self):
    for i in range(1, GRID_LENGTH + 1):
      for j in range(1, GRID_LENGTH + 1):
        self.grid[(i,j)] = EMPTY_SPACE

    assert len(self.originalSetup) == FULL_GRID_SIZE, "Please provide a valid sudoku puzzle."

    i = 0
    while i < FULL_GRID_SIZE:
      for x in range(1, GRID_LENGTH + 1):
        for y in range(1, GRID_LENGTH + 1):
          self.grid[(x,y)] = self.originalSetup[i]
          i += 1
  def display(self):
    print("   A B C   D E F   G H I   ")
    for x in range(1, GRID_LENGTH + 1):
      for y in range(1, GRID_LENGTH + 1):
        if x == 3 or x == 6:
        print(self.grid[(x,y)] + " | ", end="")
        else:
          print(self.grid[(x,y)] + " ", end="")
      if y == 3 or y == 6:
        print(   ------+-------+------)
