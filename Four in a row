number_rows = 6
#row 1 is the bottom row, row 6 is the top row
number_cols = 7
#col 1 is the leftmost column, col 7 is the rightmost column
players = ("X", "O")
turn = 1
def make_empty_board(rows, cols):
  board = []
  #a board is a list that contains a list for every row
  for i in range(0, rows):
    board.append([])
    for _ in range(0, cols):
      board[i].append(".")
  return board

def paint_board(board):
  print(r''' 1234567
+-------+''')
  for i in reversed(range(0, len(board))):
    #start painting the last row, because that's the one on top
    print("|", end = "")
    for j in range(0, len(board[i])):
      print(board[i][j], end = "")
    print("|")
  print("+-------+")

def player_move(player, column, board):
    col = int(column) - 1
    for row in board:
      if row[col] == ".":
        #we're looking for the first, or lowest, row that's empty
        #so we start at the first row, and then work our way up
        row[col] = player
        break
    return board

def get_active_player(players, turn):
  if turn%2 != 0:
    return(players[0])
  else:
    return(players[1])

def main():
  board = make_empty_board(number_rows, number_cols)
  paint_board(board)
  global turn
  while True:
    active_player = get_active_player(players, turn)
    print(f"This is turn #{turn}!")
    next_move = input(f"It's player {active_player[0]}'s turn!\nIn which column do you want to place?\n>>> ")
    if not next_move.isnumeric() or int(next_move) not in range(1, number_cols+1):
      print("Please enter a valid column!")
      continue
    else:
      board = player_move(active_player[0], int(next_move), board)
      paint_board(board)
      turn += 1
    continue

main()
